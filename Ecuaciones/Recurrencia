<html>
<script>
coeficientes_datos=[];
condiciones = [];
multiplicador = 0;
raices= [];
valor = 0;
divisores=[];
raices =[];
raiz_c =[];
dividendos=[];
nuevos_coeficientes=[];
original_datos=0;
original_condiciones=0;

function crear()
{
terminos=document.getElementById("Cantidad").value;
var tabla = document.getElementById("variables_n");
var tablaCoeficientes = document.getElementById("coeficientes");
for(i=0;i<terminos;i++)
{
var fila=tabla.insertRow(-1);
for(j=0;j<2;j++)
{
var posicion= ""+i+j;
var celda_individual=fila.insertCell(-1);
var  CELDA="<input type=\"int\"";
CELDA=CELDA+"id=\" "+posicion+"\"";
CELDA=CELDA+"size=\"5\">";
celda_individual.innerHTML=CELDA;
}
}
terminos=parseInt(terminos)+1;
for(i=0;i<terminos;i++)
{
var fila2=tablaCoeficientes.insertRow(-1);
for(j=0;j<1;j++)
{
var posicion2= ""+i+j;
var celda_individual2=fila2.insertCell(-1);
var  CELDA2="<input type=\"int\"";
CELDA2=CELDA2+"id=\"A"+posicion2+"\"";
CELDA2=CELDA2+"size=\"5\">";
celda_individual2.innerHTML=CELDA2;
}
}
} 

function guardar_coeficientes()
{
terminos=document.getElementById("Cantidad").value;
terminos=parseInt(terminos)+1;

for(i=0;i<terminos;i++)
{
for(j=0;j<1;j++)
{
var temporal=document.getElementById("A"+i+j).value;
coeficientes_datos.push(temporal);
}
}
original_datos=coeficientes_datos.length;
return coeficientes_datos;
}

function guardar_condiciones()
{
terminos=document.getElementById("Cantidad").value;

for(i=0;i<terminos;i++)
{
for(j=0;j<2;j++)
{
console.log(document.getElementById(" "+i+j));
var temporal=document.getElementById(" "+i+j).value;
condiciones.push(temporal);
}
}
original_condiciones=condiciones;
return condiciones;
}

function derivar_funcion(entrada)
{
console.log("CANTIDAD ENTRADA: "+entrada.length+" E: "+entrada)
multiplicador = (entrada.length)-1;
for(i=0;i<entrada.length;i++)
{
console.log("E: "+entrada[i]+" M: "+multiplicador+" R: "+entrada[i]* multiplicador)
entrada[i] = entrada[i]* multiplicador;
multiplicador = multiplicador-1;
}
entrada.pop();

return entrada;
}


// Calcula valor X en una funciÃ³n

function calcular_valor(lista, valor)
{
potencia = lista.length;
potencia=potencia-1;
resultado=0;
for(i=0;i< lista.length;i++)
{
elevado =Math.pow(valor, potencia)
resultado = (lista[i]*elevado)+resultado;
potencia=potencia-1;
}
return resultado;
}

function calcular_pivote(arreglo)
{
numero = 0;
console.log("L: "+arreglo+" N: "+numero)
limbo = calcular_valor(arreglo, numero)
temporal =0;
console.log("LIMBO 0: "+limbo)

if (limbo>0)
{
a=0;
while(a<5)
{
console.log("T: "+temporal);
temporal=numero;
numero = (numero)-1;
console.log("N: "+numero)
limbo = calcular_valor(arreglo,numero);
console.log("Limbo 1: "+limbo);
console.log("A: "+a)
a=a+1;
}
return temporal;
}

if (limbo<0)
{
while(limbo<0)
{
console.log("T: "+temporal);
temporal=numero;
numero = numero+1;
limbo = calcular_valor(arreglo,numero);
}
return temporal;
}

if (limbo==0)
{
return limbo;
}
}

function newton_rhapson(x,y)
{
console.log("X: "+x)
console.log("Y: "+y)
numeral =0;
derivada =derivar_funcion(x);
original  = y;

console.log("Derivada: "+derivada+" O: "+original+" Y: "+y)

for(var i=0;i<7;i++)
{
console.log("O1: "+original)
console.log("D1: "+derivada);
console.log("FO: "+calcular_valor(original,numeral)+" FD: "+calcular_valor(derivada,numeral)+" Numeral: "+numeral);
numeral=numeral-(calcular_valor(original,numeral)/calcular_valor(derivada,numeral));
}

return numeral;
}

function constructor_funcion()
{
crear();
}

function guardar_funcion()
{
guardar_condiciones();
calcular_raices(guardar_coeficientes());
}

function lista_divisores(x,y)
{
for(i=0;i<x.length;i++)
{
for(j=0;j<y.length;j++)
{
x[i]=x[i]/y[j];
}
}

return x;
}

function division_sintetica(operacion)
{
dividendo = operacion.pop();
operacion.push(dividendo);
primero = operacion[0];

if (dividendo<0)
{
dividendo=dividendo*-1;
}
for(i=1;i<=dividendo;i++)
{
console.log("I: "+i+" D: "+dividendo);
if (dividendo%i==0)
{
divisores.push(i);
menosi=i*-1;
divisores.push(menosi);
}
}

for(i=0;i<=dividendo;i++)
{
if(primero%i==0)
{
dividendos.push(i);
menosi=i*-1;
dividendos.push(menosi);
}
}

console.log("DVISORES: "+divisores+" DIVIDENDOS: "+dividendos)

divisores = lista_divisores(divisores,dividendos);

console.log("Divisores: "+divisores)

for (j=0;j<divisores.length;j++)
{
primerValor = operacion[0]*divisores[j];
valor=0;
for(i=1;i<operacion.length;i++)
{
valor = operacion[i]+primerValor;
primerValor = valor*divisores[j];

console.log("O: "+operacion[i]+" D: "+dividendo+" V: "+valor+" DJ: "+divisores[j])
if (operacion[i]==dividendo && valor==0)
{
raices.push(divisores[j]);
}
}
}
console.log("R: "+raices);
}

function division_sintetica_1(arreglos, revalor)
{
nuevos_coeficientes=[];
primerValor = arreglos[0]*revalor;
valor=0;
nuevos_coeficientes.push(arreglos[0]);
console.log("PP: "+nuevos_coeficientes)
for(i=1;i<arreglos.length;i++)
{
valor = arreglos[i]+primerValor;
primerValor = valor*revalor;
nuevos_coeficientes.push(valor);
}
if(nuevos_coeficientes.length>3)
{
nuevos_coeficientes.pop();
}
return nuevos_coeficientes;
}

function cuadratica1(matrix)
{
console.log("M: "+matrix)
a = matrix[0];
b = matrix[1];
c = matrix[2];

x1 = (-b+ Math.sqrt(Math.pow(b, 2)-(4*a*c)))/(2*a);

return x1;
}

function cuadratica2(matrix)
{
console.log("M: "+matrix)
a = matrix[0];
b = matrix[1];
c = matrix[2];

x2 = (-b- Math.sqrt(Math.pow(b, 2)-(4*a*c)))/(2*a);

return x2;
}

function raices_elevadas(raices)
{
cantidad = parseInt(original_condiciones.length/2);
console.log("RAICES: "+raices);

raices_calculadas=[];

for(i=0;i<cantidad;i++)
{
k=0;
for(j=0;j<cantidad;j++)
{
raices_calculadas.push(Math.pow(raices[i],original_condiciones[k]))
console.log("RC: "+raices_calculadas+" RI: "+raices[i]+" OR: "+original_condiciones[k])
k=k+2;
}
}

return raices_calculadas;
}

function gauss(arreglo_raices, arreglo_condiciones)
{ 

cantidad_datos=Math.sqrt(arreglo_raices.length);

ecuaciones = new Array(cantidad_datos).fill(0);
divisor=0;

for(i=0;i<cantidad_datos;i++)
{
ecuaciones[i] = new Array(cantidad_datos).fill(0);
}

for(i=0;i<cantidad_datos;i++)
{	
k=i;
for(j=0;j<cantidad_datos;j++)
{
ecuaciones[i][j] = arreglo_raices[k];
k=k+cantidad_datos;
}
}

console.log("A: "+ecuaciones);

for(i=0;i<cantidad_datos;i++)
{
k=i;
ecuaciones[i].push(arreglo_condiciones[k]);
}

console.log("B: "+ecuaciones);
for(j=0;j<cantidad_datos;j++)
{
if (ecuaciones[0][j]!=1)
{
valor=ecuaciones[0][j]
divisor=valor;
ecuaciones[0][j]=1;
console.log("DVISOR: "+divisor)
for(m=0;m<(cantidad_datos+1);m++)
{
if(m!=j)
{
ecuaciones[0][m]=ecuaciones[0][m]/divisor;
}
}
}

console.log("Ed: "+ecuaciones+" I: "+i);

for(k=1;k<cantidad_datos;k++)
{
if(k<cantidad_datos)
{
console.log("COORDENADA: "+ecuaciones[k][i]+" K: "+k+" I: "+i)
multiplicador=ecuaciones[k][j]*-1;
}

for(h=0;h<(cantidad_datos+1);h++)
{
console.log("OP: "+ecuaciones[0][h]+" M: "+multiplicador+" KH: "+ecuaciones[k][h]+" PR: "+parseFloat((ecuaciones[0][h]*multiplicador))+" R: "+parseFloat((ecuaciones[0][h]*multiplicador)+ecuaciones[k][h]));
ecuaciones[k][h]=parseFloat((ecuaciones[0][h]*multiplicador)+ecuaciones[k][h]);
}
}
<!--VA BIEN

for(l=0;l<cantidad_datos;l++)
{
if((l+1)<cantidad_datos)
{
temporal=ecuaciones[l+1];
ecuaciones[l+1]=ecuaciones[l];
ecuaciones[l]=temporal;
}
}

console.log("EE: "+ecuaciones)
}
return ecuaciones;
}

function extraer_coeficientes(arreglo_constantes)
{
constantes=[]
for(f=0;f<cantidad_datos;f++)
{
console.log("AS: "+arreglo_constantes[cantidad_datos+1])
constantes.push(arreglo_constantes[f][cantidad_datos+1]);
}
return constantes;
}

function real()
{
guardar_condiciones();
funcion = [3,-14,-15,42,40];
funcion1 = [3,-14,-15,42,40];
i = funcion.length;
while(i>3)
{
Raiz = newton_rhapson(funcion.slice(), funcion1.slice());
retorno = division_sintetica_1(funcion1, Raiz);
funcion=retorno;
funcion1=retorno;
raiz_c.push(Raiz);
console.log("RAICES_C: "+raiz_c)
i=i-1;
console.log("F: "+funcion)
}
if (i==3)
{
raiz_c.push(cuadratica1(funcion));
raiz_c.push(cuadratica2(funcion));
}

gauss(raices_elevadas(raiz_c));
}

function prueba()
{
console.log(extraer_coeficientes(gauss([2,3,5,3,-2,-1,1,-4,-1],[1,-3,4])));
}

</script>
<body>
<input type="text" placeholder="Ingresar el grado de la ecuacion" id="Cantidad"></input>
<button onclick="constructor_funcion();">Crear</button>
<button onclick="guardar_funcion();">Guardar</button>
<button onclick="real();">Real</button>
<button onclick="prueba();">Prueba</button>
<table id="variables_n"></table>
COEFICIENTES
<table id="coeficientes"></table>
</body>
</html>
